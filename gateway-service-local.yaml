spring:
  application:
    name: gateway-service
  webflux:
    base-path: /template  
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://localhost:9411/    
    service:
      name: gateway-service
    sender:
      type: rabbit
    storage:
      type: elasticsearch
      elasticsearch:
        hosts: localhost:9200            
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
  security:
    oauth2:
      client:
        registration:
          keycloak:            
            client-id: spring-microservices-template-gateway-service
            client-secret: yj72kNVj20RAQaKolxYsKqo7ecwnTg2v
            authorization-grant-type: authorization_code            
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:18080/auth/realms/spring-microservices-template
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:18080/auth/realms/spring-microservices-template/protocol/openid-connect/certs
  cloud:
    gateway:
      routes:
       - id: book-service
         uri: http://localhost:8083/template
         predicates:
          - Path=/book-service/**
         filters:
          - TokenRelay=
          - RemoveRequestHeader=Cookie
       - id: user-service
         uri: http://localhost:8084/template
         predicates:
          - Path=/user-service/**
         filters:
          - TokenRelay=
          - RemoveRequestHeader=Cookie
       - id: auth-service
         uri: http://localhost:8085/template
         predicates:
          - Path=/auth-service/**
         filters:
          - TokenRelay=
          - RemoveRequestHeader=Cookie
       #- id: openapi
         #uri: http://localhost:8080/template
         #predicates:
          #- Path=/v3/api-docs/**
         #filters:
          #- RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs   
  main:
    allow-bean-definition-overriding: true                                                                                  

eureka:  
  client:
    region: default
    registryFetchIntervalSeconds: 20  
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://admin:admin@localhost:8082/template/eureka/

springdoc:
  api-docs:
    enabled: true    
  swagger-ui:    
    urls:
      - name: book-service
        url: /book-service/api-docs
      - name: user-service
        url: /user-service/api-docs
      - name: auth-service
        url: /auth-service/api-docs      

server:
  port: 8080
  forward-headers-strategy: framework  
  servlet:
    context-path: /template  
